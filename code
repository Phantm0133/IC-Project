#include<stdio.h>
#include <stdlib.h>
#include <time.h>
#include<conio.h>
#include<ctype.h>
//UwU
void initializeGame(int board[4][4]);
void spawnTile(int board[4][4]);
void printBoard(int board[4][4]);
void moveUp(int board[4][4]);
void moveDown(int board[4][4]);
void moveRight(int board[4][4]);
void moveLeft(int board[4][4]);

int main(){
    srand(time(0));

    int board[4][4] = {{0,2,0,0},{0,2,0,0},{0,2,0,0},{0,2,0,0}};
    int gameOver = 0;

    //initializeGame(board);
    char input;

    while(gameOver==0){
        printBoard(board);
        printf("Press W (Up), A (Left), S (Down), D (Right) to move tiles. Press Q to exit.\n");

        input = _getch();

        if(input=='q' || input=='Q'){
            break;
        }

        switch(tolower(input)){
            case 'w': moveUp(board); break;
            
        }
    }

    return 0;
}



void initializeGame(int board[4][4]){
    for(int i=0; i < 4; i++){
        for(int j=0; j < 4; j++){
            board[i][j] = 0;
        }
    }
    spawnTile(board);
    spawnTile(board);
}

void spawnTile(int board[4][4]){
    int x, y;
    do{
        x = rand()%4;
        y = rand()%4;
    } while(board[x][y] != 0);

    int arr[10] = {2, 2, 2, 2, 2, 2, 2, 2, 2, 4};  //Array that spawns 2 with 90% chance and 4 with 10% chance
    board[x][y] = arr[rand()%10];
}

void printBoard(int board[4][4]){
    printf("\n");
    for (int i = 0; i < 4; i++){
        for (int j = 0; j < 4; j++){
            if(board[i][j] == 0){
                printf(".   ");
            } 
            else{
                printf("%-4d", board[i][j]);
            }
        }
        printf("\n");
    }
    printf("\n");
}

void moveUp(int board[4][4]){
    for(int i=1; i<4; i++){
        for(int j=0; j<4; j++){
            int k = i;      //Temporary variable to mimic i and be able to decrement itself.
            while(board[k-1][j]==0 && k>=0){
                int temp = board[k][j];  //Swapping the cell with the empty cell above it.
                board[k][j] = board[k-1][j];
                board[k-1][j] = temp;
                k--;
            }
        }
    }
    for(int i=0; i<3; i++){
        for(int j=0; j<4; j++){
            if(board[i][j]==board[i+1][j]){
                board[i][j] *= 2;
                board[i+1][j] = 0;
                for(int k = i+2; k<4; k++){
                    int h = k;
                    while(board[h-1][j]==0 && h>=0){
                        int temp = board[h][j];  //Swapping the cell with the empty cell above it.
                        board[h][j] = board[h-1][j];
                        board[h-1][j] = temp;
                        h--;
            }
                }
            }
        }
    }
}

